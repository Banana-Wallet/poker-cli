/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PokerGameSingleton,
  PokerGameSingletonInterface,
} from "../../core/PokerGameSingleton";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "chips",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "deck",
    outputs: [
      {
        internalType: "uint8",
        name: "number",
        type: "uint8",
      },
      {
        internalType: "enum IPokerGameSingleton.CardType",
        name: "cardType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "hiddenCards",
    outputs: [
      {
        internalType: "uint8",
        name: "number",
        type: "uint8",
      },
      {
        internalType: "enum IPokerGameSingleton.CardType",
        name: "cardType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_players",
        type: "address[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPokerGameSingleton.PlayerAction",
        name: "_action",
        type: "uint8",
      },
      {
        internalType: "uint128",
        name: "_raiseAmount",
        type: "uint128",
      },
    ],
    name: "playHand",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "playerCards",
    outputs: [
      {
        internalType: "uint8",
        name: "number",
        type: "uint8",
      },
      {
        internalType: "enum IPokerGameSingleton.CardType",
        name: "cardType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "players",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "pokerRounds",
    outputs: [
      {
        internalType: "uint8",
        name: "currentTurn",
        type: "uint8",
      },
      {
        internalType: "uint128",
        name: "highestChips",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pokerTable",
    outputs: [
      {
        internalType: "uint8",
        name: "currentRound",
        type: "uint8",
      },
      {
        internalType: "uint128",
        name: "buyInAmount",
        type: "uint128",
      },
      {
        internalType: "uint8",
        name: "maxPlayers",
        type: "uint8",
      },
      {
        internalType: "uint128",
        name: "potValue",
        type: "uint128",
      },
      {
        internalType: "uint8",
        name: "bigBlind",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "smallBlind",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "remainingCards",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526034604160006101000a81548160ff021916908360ff16021790555034801561002c57600080fd5b506122b88061003c6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063af4126bc11610066578063af4126bc14610174578063b95b5509146101a5578063bd42b014146101d6578063bfd83d8f146101f4578063f71d96cb146102105761009e565b80632886e89b146100a357806365b1dafa146100c65780637132a74c146100f75780637d130ac814610128578063a224cee714610158575b600080fd5b6100ab610240565b6040516100bd9695949392919061177b565b60405180910390f35b6100e060048036038101906100db9190611826565b6102d6565b6040516100ee9291906118ca565b60405180910390f35b610111600480360381019061010c919061191f565b610317565b60405161011f92919061194c565b60405180910390f35b610142600480360381019061013d91906119d3565b610364565b60405161014f9190611a0f565b60405180910390f35b610172600480360381019061016d9190611b83565b61037c565b005b61018e60048036038101906101899190611bcc565b6106c7565b60405161019c9291906118ca565b60405180910390f35b6101bf60048036038101906101ba9190611826565b610715565b6040516101cd9291906118ca565b60405180910390f35b6101de610756565b6040516101eb9190611c0c565b60405180910390f35b61020e60048036038101906102099190611c78565b610769565b005b61022a60048036038101906102259190611826565b61096f565b6040516102379190611cc7565b60405180910390f35b603c8060000160009054906101000a900460ff16908060000160019054906101000a90046fffffffffffffffffffffffffffffffff16908060000160119054906101000a900460ff16908060020160009054906101000a90046fffffffffffffffffffffffffffffffff16908060020160109054906101000a900460ff16908060020160119054906101000a900460ff16905086565b600881603481106102e657600080fd5b016000915090508060000160009054906101000a900460ff16908060000160019054906101000a900460ff16905082565b60406020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a90046fffffffffffffffffffffffffffffffff16905082565b60006020528060005260406000206000915090505481565b604051806101000160405280600060ff16815260200160646fffffffffffffffffffffffffffffffff168152602001600560ff16815260200182815260200160006fffffffffffffffffffffffffffffffff168152602001600a60ff168152602001600560ff168152602001600567ffffffffffffffff81111561040357610402611a40565b5b6040519080825280602002602001820160405280156104315781602001602082028036833780820191505090505b50815250603c60008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060408201518160000160116101000a81548160ff021916908360ff16021790555060608201518160010190805190602001906104d49291906115b9565b5060808201518160020160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060a08201518160020160106101000a81548160ff021916908360ff16021790555060c08201518160020160116101000a81548160ff021916908360ff16021790555060e0820151816003019080519060200190610572929190611643565b509050506040518060800160405280600060ff16815260200160006fffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff8111156105bf576105be611a40565b5b6040519080825280602002602001820160405280156105ed5781602001602082028036833780820191505090505b50815260200182815250604060008060ff16815260200190815260200160002060008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506040820151816001019080519060200190610689929190611643565b5060608201518160020190805190602001906106a69291906115b9565b509050506106b26109ae565b6106bb81610aae565b6106c481610db8565b50565b600160205281600052604060002081600281106106e357600080fd5b01600091509150508060000160009054906101000a900460ff16908060000160019054906101000a900460ff16905082565b6003816005811061072557600080fd5b016000915090508060000160009054906101000a900460ff16908060000160019054906101000a900460ff16905082565b604160009054906101000a900460ff1681565b600060406000603c60000160009054906101000a900460ff1660ff1660ff16815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff16816002018260000160009054906101000a900460ff1660ff16815481106107d9576107d8611ce2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461085a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085190611d6e565b60405180910390fd5b6000600381111561086e5761086d611853565b5b83600381111561088157610880611853565b5b036108c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b890611e00565b60405180910390fd5b600260038111156108d5576108d4611853565b5b8360038111156108e8576108e7611853565b5b036108fa576108f5610e3f565b61096a565b60038081111561090d5761090c611853565b5b8360038111156109205761091f611853565b5b036109335761092e82610fca565b610969565b6001600381111561094757610946611853565b5b83600381111561095a57610959611853565b5b036109685761096761133c565b5b5b5b505050565b6002818154811061097f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000805b60048160ff161015610aaa576000600290505b600e8160ff1611610a9c5760405180604001604052808260ff1681526020018360ff1660038111156109fa576109f9611853565b5b6003811115610a0c57610a0b611853565b5b81525060088460ff1660348110610a2657610a25611ce2565b5b0160008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548160ff02191690836003811115610a7357610a72611853565b5b02179055509050508280610a8690611e4f565b9350508080610a9490611e4f565b9150506109c5565b5080806001019150506109b2565b5050565b6008604160009054906101000a900460ff1660ff161015610b04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afb90611eea565b60405180910390fd5b60005b60028160ff161015610c9a5760005b82518160ff161015610c8c576000604160009054906101000a900460ff1660ff16424485604051602001610b4c93929190611f61565b6040516020818303038152906040528051906020012060001c610b6f9190611fcd565b9050600081905060088160ff1660348110610b8d57610b8c611ce2565b5b0160016000878660ff1681518110610ba857610ba7611ce2565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208560ff1660028110610bff57610bfe611ce2565b5b016000820160009054906101000a900460ff168160000160006101000a81548160ff021916908360ff1602179055506000820160019054906101000a900460ff168160000160016101000a81548160ff02191690836003811115610c6657610c65611853565b5b0217905550905050610c778161143e565b50508080610c8490611e4f565b915050610b16565b508080600101915050610b07565b5060005b60058160ff161015610db4576000604160009054906101000a900460ff1660ff16424484604051602001610cd493929190611f61565b6040516020818303038152906040528051906020012060001c610cf79190611fcd565b9050600081905060088160ff1660348110610d1557610d14611ce2565b5b0160038460ff1660058110610d2d57610d2c611ce2565b5b016000820160009054906101000a900460ff168160000160006101000a81548160ff021916908360ff1602179055506000820160019054906101000a900460ff168160000160016101000a81548160ff02191690836003811115610d9457610d93611853565b5b0217905550905050610da58161143e565b50508080600101915050610c9e565b5050565b60005b81518160ff161015610e3b576064600080848460ff1681518110610de257610de1611ce2565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508080610e3390611e4f565b915050610dbb565b5050565b600060406000603c60000160009054906101000a900460ff1660ff1660ff16815260200190815260200160002090506000816001018260000160009054906101000a900460ff1660ff1681548110610e9a57610e99611ce2565b5b90600052602060002090600291828204019190066010029054906101000a90046fffffffffffffffffffffffffffffffff168260000160019054906101000a90046fffffffffffffffffffffffffffffffff16610ef79190611ffe565b9050806fffffffffffffffffffffffffffffffff166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f599190612042565b9250508190555080603c60020160008282829054906101000a90046fffffffffffffffffffffffffffffffff16610f909190612076565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055505050565b600060406000603c60000160009054906101000a900460ff1660ff1660ff16815260200190815260200160002090508060000160019054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16826fffffffffffffffffffffffffffffffff161161107f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110769061212c565b60405180910390fd5b6000816001018260000160009054906101000a900460ff1660ff16815481106110ab576110aa611ce2565b5b90600052602060002090600291828204019190066010029054906101000a90046fffffffffffffffffffffffffffffffff168260000160019054906101000a90046fffffffffffffffffffffffffffffffff166111089190611ffe565b905082816111169190612076565b6fffffffffffffffffffffffffffffffff166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156111a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119f90612198565b60405180910390fd5b82816111b49190612076565b6fffffffffffffffffffffffffffffffff166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112139190612042565b9250508190555082816112269190612076565b603c60020160008282829054906101000a90046fffffffffffffffffffffffffffffffff166112559190612076565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055508281836001018460000160009054906101000a900460ff1660ff16815481106112b7576112b6611ce2565b5b90600052602060002090600291828204019190066010029054906101000a90046fffffffffffffffffffffffffffffffff166112f39190612076565b6112fd9190612076565b8260000160016101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550505050565b600060406000603c60000160009054906101000a900460ff1660ff1660ff168152602001908152602001600020905060005b81600201805490508160ff16101561143a576000826001018260ff168154811061139b5761139a611ce2565b5b90600052602060002090600291828204019190066010029054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff161115611427576000611426576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141d90612204565b60405180910390fd5b5b808061143290611e4f565b91505061136e565b5050565b6001604160009054906101000a900460ff1661145a9190612224565b60ff168160ff16146115205760086001604160009054906101000a900460ff166114849190612224565b60ff166034811061149857611497611ce2565b5b0160088260ff16603481106114b0576114af611ce2565b5b016000820160009054906101000a900460ff168160000160006101000a81548160ff021916908360ff1602179055506000820160019054906101000a900460ff168160000160016101000a81548160ff0219169083600381111561151757611516611853565b5b02179055509050505b60086001604160009054906101000a900460ff1661153e9190612224565b60ff166034811061155257611551611ce2565b5b01600080820160006101000a81549060ff02191690556000820160016101000a81549060ff021916905550506041600081819054906101000a900460ff168092919061159d90612259565b91906101000a81548160ff021916908360ff1602179055505050565b828054828255906000526020600020908101928215611632579160200282015b828111156116315782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906115d9565b5b50905061163f9190611717565b5090565b828054828255906000526020600020906001016002900481019282156117065791602002820160005b838211156116c857835183826101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055509260200192601001602081600f0104928301926001030261166c565b80156117045782816101000a8154906fffffffffffffffffffffffffffffffff0219169055601001602081600f010492830192600103026116c8565b505b5090506117139190611717565b5090565b5b80821115611730576000816000905550600101611718565b5090565b600060ff82169050919050565b61174a81611734565b82525050565b60006fffffffffffffffffffffffffffffffff82169050919050565b61177581611750565b82525050565b600060c0820190506117906000830189611741565b61179d602083018861176c565b6117aa6040830187611741565b6117b7606083018661176c565b6117c46080830185611741565b6117d160a0830184611741565b979650505050505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b611803816117f0565b811461180e57600080fd5b50565b600081359050611820816117fa565b92915050565b60006020828403121561183c5761183b6117e6565b5b600061184a84828501611811565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811061189357611892611853565b5b50565b60008190506118a482611882565b919050565b60006118b482611896565b9050919050565b6118c4816118a9565b82525050565b60006040820190506118df6000830185611741565b6118ec60208301846118bb565b9392505050565b6118fc81611734565b811461190757600080fd5b50565b600081359050611919816118f3565b92915050565b600060208284031215611935576119346117e6565b5b60006119438482850161190a565b91505092915050565b60006040820190506119616000830185611741565b61196e602083018461176c565b9392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119a082611975565b9050919050565b6119b081611995565b81146119bb57600080fd5b50565b6000813590506119cd816119a7565b92915050565b6000602082840312156119e9576119e86117e6565b5b60006119f7848285016119be565b91505092915050565b611a09816117f0565b82525050565b6000602082019050611a246000830184611a00565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611a7882611a2f565b810181811067ffffffffffffffff82111715611a9757611a96611a40565b5b80604052505050565b6000611aaa6117dc565b9050611ab68282611a6f565b919050565b600067ffffffffffffffff821115611ad657611ad5611a40565b5b602082029050602081019050919050565b600080fd5b6000611aff611afa84611abb565b611aa0565b90508083825260208201905060208402830185811115611b2257611b21611ae7565b5b835b81811015611b4b5780611b3788826119be565b845260208401935050602081019050611b24565b5050509392505050565b600082601f830112611b6a57611b69611a2a565b5b8135611b7a848260208601611aec565b91505092915050565b600060208284031215611b9957611b986117e6565b5b600082013567ffffffffffffffff811115611bb757611bb66117eb565b5b611bc384828501611b55565b91505092915050565b60008060408385031215611be357611be26117e6565b5b6000611bf1858286016119be565b9250506020611c0285828601611811565b9150509250929050565b6000602082019050611c216000830184611741565b92915050565b60048110611c3457600080fd5b50565b600081359050611c4681611c27565b92915050565b611c5581611750565b8114611c6057600080fd5b50565b600081359050611c7281611c4c565b92915050565b60008060408385031215611c8f57611c8e6117e6565b5b6000611c9d85828601611c37565b9250506020611cae85828601611c63565b9150509250929050565b611cc181611995565b82525050565b6000602082019050611cdc6000830184611cb8565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f4e6f7420796f7572207475726e20746f20706c61790000000000000000000000600082015250565b6000611d58601583611d11565b9150611d6382611d22565b602082019050919050565b60006020820190508181036000830152611d8781611d4b565b9050919050565b7f466f6c64696e67206973206e6f7420616c6c6f77656420696e2074686973207660008201527f657273696f6e0000000000000000000000000000000000000000000000000000602082015250565b6000611dea602683611d11565b9150611df582611d8e565b604082019050919050565b60006020820190508181036000830152611e1981611ddd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e5a82611734565b915060ff8203611e6d57611e6c611e20565b5b600182019050919050565b7f4e6f7420656e6f7567682063617264732072656d61696e696e6720696e20746860008201527f65206465636b2e00000000000000000000000000000000000000000000000000602082015250565b6000611ed4602783611d11565b9150611edf82611e78565b604082019050919050565b60006020820190508181036000830152611f0381611ec7565b9050919050565b6000819050919050565b611f25611f20826117f0565b611f0a565b82525050565b60008160f81b9050919050565b6000611f4382611f2b565b9050919050565b611f5b611f5682611734565b611f38565b82525050565b6000611f6d8286611f14565b602082019150611f7d8285611f14565b602082019150611f8d8284611f4a565b600182019150819050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611fd8826117f0565b9150611fe3836117f0565b925082611ff357611ff2611f9e565b5b828206905092915050565b600061200982611750565b915061201483611750565b925082820390506fffffffffffffffffffffffffffffffff81111561203c5761203b611e20565b5b92915050565b600061204d826117f0565b9150612058836117f0565b92508282039050818111156120705761206f611e20565b5b92915050565b600061208182611750565b915061208c83611750565b925082820190506fffffffffffffffffffffffffffffffff8111156120b4576120b3611e20565b5b92915050565b7f526169736520616d6f756e742073686f756c642062652067726561746572207460008201527f68616e2074686520686967686573742072616973650000000000000000000000602082015250565b6000612116603583611d11565b9150612121826120ba565b604082019050919050565b6000602082019050818103600083015261214581612109565b9050919050565b7f4e6f7420656e6f75676820636869707320746f20726169736500000000000000600082015250565b6000612182601983611d11565b915061218d8261214c565b602082019050919050565b600060208201905081810360008301526121b181612175565b9050919050565b7f436865636b206973206e6f7420706f737369626c650000000000000000000000600082015250565b60006121ee601583611d11565b91506121f9826121b8565b602082019050919050565b6000602082019050818103600083015261221d816121e1565b9050919050565b600061222f82611734565b915061223a83611734565b9250828203905060ff81111561225357612252611e20565b5b92915050565b600061226482611734565b91506000820361227757612276611e20565b5b60018203905091905056fea2646970667358221220c6a9c25d925dfdc8fa6449840edca0735d8764e8c208d9438e06564869f4869764736f6c63430008180033";

type PokerGameSingletonConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PokerGameSingletonConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PokerGameSingleton__factory extends ContractFactory {
  constructor(...args: PokerGameSingletonConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PokerGameSingleton & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PokerGameSingleton__factory {
    return super.connect(runner) as PokerGameSingleton__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PokerGameSingletonInterface {
    return new Interface(_abi) as PokerGameSingletonInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PokerGameSingleton {
    return new Contract(address, _abi, runner) as unknown as PokerGameSingleton;
  }
}
