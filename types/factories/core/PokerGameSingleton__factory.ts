/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PokerGameSingleton,
  PokerGameSingletonInterface,
} from "../../core/PokerGameSingleton";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "chips",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "deck",
    outputs: [
      {
        internalType: "uint8",
        name: "number",
        type: "uint8",
      },
      {
        internalType: "enum IPokerGameSingleton.CardType",
        name: "cardType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "hiddenCards",
    outputs: [
      {
        internalType: "uint8",
        name: "number",
        type: "uint8",
      },
      {
        internalType: "enum IPokerGameSingleton.CardType",
        name: "cardType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_players",
        type: "address[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPokerGameSingleton.PlayerAction",
        name: "_action",
        type: "uint8",
      },
      {
        internalType: "uint128",
        name: "_raiseAmount",
        type: "uint128",
      },
    ],
    name: "playHand",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "playerCards",
    outputs: [
      {
        internalType: "uint8",
        name: "number",
        type: "uint8",
      },
      {
        internalType: "enum IPokerGameSingleton.CardType",
        name: "cardType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "players",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_round",
        type: "uint8",
      },
    ],
    name: "pokerRoundStatus",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "currentTurn",
            type: "uint8",
          },
          {
            internalType: "uint128",
            name: "highestChips",
            type: "uint128",
          },
          {
            internalType: "uint128[]",
            name: "chips",
            type: "uint128[]",
          },
          {
            internalType: "address[]",
            name: "gamePlayers",
            type: "address[]",
          },
        ],
        internalType: "struct IPokerGameSingleton.PokerRound",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "pokerRounds",
    outputs: [
      {
        internalType: "uint8",
        name: "currentTurn",
        type: "uint8",
      },
      {
        internalType: "uint128",
        name: "highestChips",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pokerTable",
    outputs: [
      {
        internalType: "uint8",
        name: "currentRound",
        type: "uint8",
      },
      {
        internalType: "uint128",
        name: "buyInAmount",
        type: "uint128",
      },
      {
        internalType: "uint8",
        name: "maxPlayers",
        type: "uint8",
      },
      {
        internalType: "uint128",
        name: "potValue",
        type: "uint128",
      },
      {
        internalType: "uint8",
        name: "bigBlind",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "smallBlind",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "gameEnded",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pokerTableStatus",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "currentRound",
            type: "uint8",
          },
          {
            internalType: "uint128",
            name: "buyInAmount",
            type: "uint128",
          },
          {
            internalType: "uint8",
            name: "maxPlayers",
            type: "uint8",
          },
          {
            internalType: "address[]",
            name: "players",
            type: "address[]",
          },
          {
            internalType: "uint128",
            name: "potValue",
            type: "uint128",
          },
          {
            internalType: "uint8",
            name: "bigBlind",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "smallBlind",
            type: "uint8",
          },
          {
            internalType: "uint128[]",
            name: "playerChips",
            type: "uint128[]",
          },
          {
            internalType: "bool",
            name: "gameEnded",
            type: "bool",
          },
          {
            internalType: "uint128[]",
            name: "finalPoints",
            type: "uint128[]",
          },
        ],
        internalType: "struct IPokerGameSingleton.PokerTable",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "remainingCards",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "resetGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type PokerGameSingletonConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PokerGameSingletonConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PokerGameSingleton__factory extends ContractFactory {
  constructor(...args: PokerGameSingletonConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PokerGameSingleton & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PokerGameSingleton__factory {
    return super.connect(runner) as PokerGameSingleton__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PokerGameSingletonInterface {
    return new Interface(_abi) as PokerGameSingletonInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PokerGameSingleton {
    return new Contract(address, _abi, runner) as unknown as PokerGameSingleton;
  }
}
