/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PokerGameProxyFactory,
  PokerGameProxyFactoryInterface,
} from "../../proxy/PokerGameProxyFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract PokerGameProxy",
        name: "proxy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "singleton",
        type: "address",
      },
    ],
    name: "ProxyCreation",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_singleton",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initializer",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "saltNonce",
        type: "uint256",
      },
    ],
    name: "createChainSpecificProxyWithNonce",
    outputs: [
      {
        internalType: "contract PokerGameProxy",
        name: "proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_singleton",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initializer",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "saltNonce",
        type: "uint256",
      },
      {
        internalType: "contract IProxyCreationCallback",
        name: "callback",
        type: "address",
      },
    ],
    name: "createProxyWithCallback",
    outputs: [
      {
        internalType: "contract PokerGameProxy",
        name: "proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_singleton",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initializer",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "saltNonce",
        type: "uint256",
      },
    ],
    name: "createProxyWithNonce",
    outputs: [
      {
        internalType: "contract PokerGameProxy",
        name: "proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_singleton",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_salt",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "initializer",
        type: "bytes",
      },
    ],
    name: "getAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_foo",
        type: "uint256",
      },
    ],
    name: "getBytecode",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxyCreationCode",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061143b806100206000396000f3fe60806040523480156200001157600080fd5b5060043610620000885760003560e01c80635abb2d5b11620000635780635abb2d5b146200010757806381871cbc146200013d578063d18af54d1462000173578063ec9e80bb14620001a95762000088565b80631688f0b9146200008d5780633408e47014620000c357806353e5d93514620000e5575b600080fd5b620000ab6004803603810190620000a5919062000926565b620001df565b604051620000ba919062000a0c565b60405180910390f35b620000cd62000268565b604051620000dc919062000a3a565b60405180910390f35b620000ef62000275565b604051620000fe919062000ae0565b60405180910390f35b6200012560048036038101906200011f919062000b04565b620002a2565b60405162000134919062000b90565b60405180910390f35b6200015b600480360381019062000155919062000bad565b6200038a565b6040516200016a919062000ae0565b60405180910390f35b6200019160048036038101906200018b919062000c39565b62000406565b604051620001a0919062000a0c565b60405180910390f35b620001c76004803603810190620001c1919062000926565b620004fc565b604051620001d6919062000a0c565b60405180910390f35b600080838051906020012083604051602001620001fe92919062000d1e565b6040516020818303038152906040528051906020012090506200022385858362000590565b91507f4f51faf6c4561ff95f067657e43439f0f856d97c04d9ec9070a6199ad418e23582866040516200025892919062000d4e565b60405180910390a1509392505050565b6000804690508091505090565b606060405180602001620002899062000702565b6020820181038252601f19601f82011660405250905090565b600080828051906020012084604051602001620002c192919062000d1e565b604051602081830303815290604052805190602001209050600060405180602001620002ed9062000702565b6020820181038252601f19601f820116604052508673ffffffffffffffffffffffffffffffffffffffff166040516020016200032b92919062000dbd565b6040516020818303038152906040529050600060ff60f81b3084848051906020012060405160200162000362949392919062000e8a565b6040516020818303038152906040528051906020012090508060001c93505050509392505050565b6060600060405180602001620003a09062000702565b6020820181038252601f19601f820116604052509050808484604051602001620003cc92919062000ee0565b604051602081830303815290604052604051602001620003ee92919062000f0d565b60405160208183030381529060405291505092915050565b60008083836040516020016200041e92919062000f78565b6040516020818303038152906040528051906020012060001c905062000446868683620001df565b9150600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614620004f3578273ffffffffffffffffffffffffffffffffffffffff16631e52b518838888886040518563ffffffff1660e01b8152600401620004be949392919062000fa8565b600060405180830381600087803b158015620004d957600080fd5b505af1158015620004ee573d6000803e3d6000fd5b505050505b50949350505050565b6000808380519060200120836200051262000268565b604051602001620005269392919062000ffc565b6040516020818303038152906040528051906020012090506200054b85858362000590565b91507f4f51faf6c4561ff95f067657e43439f0f856d97c04d9ec9070a6199ad418e23582866040516200058092919062000d4e565b60405180910390a1509392505050565b60006200059d84620006ef565b620005df576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005d690620010a0565b60405180910390fd5b600060405180602001620005f39062000702565b6020820181038252601f19601f820116604052508573ffffffffffffffffffffffffffffffffffffffff166040516020016200063192919062000dbd565b6040516020818303038152906040529050828151826020016000f59150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620006c0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620006b79062001112565b60405180910390fd5b600084511115620006e75760008060008651602088016000875af103620006e657600080fd5b5b509392505050565b600080823b905060008111915050919050565b6102d1806200113583390190565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620007518262000724565b9050919050565b620007638162000744565b81146200076f57600080fd5b50565b600081359050620007838162000758565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620007de8262000793565b810181811067ffffffffffffffff821117156200080057620007ff620007a4565b5b80604052505050565b60006200081562000710565b9050620008238282620007d3565b919050565b600067ffffffffffffffff821115620008465762000845620007a4565b5b620008518262000793565b9050602081019050919050565b82818337600083830152505050565b6000620008846200087e8462000828565b62000809565b905082815260208101848484011115620008a357620008a26200078e565b5b620008b08482856200085e565b509392505050565b600082601f830112620008d057620008cf62000789565b5b8135620008e28482602086016200086d565b91505092915050565b6000819050919050565b6200090081620008eb565b81146200090c57600080fd5b50565b6000813590506200092081620008f5565b92915050565b6000806000606084860312156200094257620009416200071a565b5b6000620009528682870162000772565b935050602084013567ffffffffffffffff8111156200097657620009756200071f565b5b6200098486828701620008b8565b925050604062000997868287016200090f565b9150509250925092565b6000819050919050565b6000620009cc620009c6620009c08462000724565b620009a1565b62000724565b9050919050565b6000620009e082620009ab565b9050919050565b6000620009f482620009d3565b9050919050565b62000a0681620009e7565b82525050565b600060208201905062000a236000830184620009fb565b92915050565b62000a3481620008eb565b82525050565b600060208201905062000a51600083018462000a29565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101562000a9357808201518184015260208101905062000a76565b60008484015250505050565b600062000aac8262000a57565b62000ab8818562000a62565b935062000aca81856020860162000a73565b62000ad58162000793565b840191505092915050565b6000602082019050818103600083015262000afc818462000a9f565b905092915050565b60008060006060848603121562000b205762000b1f6200071a565b5b600062000b308682870162000772565b935050602062000b43868287016200090f565b925050604084013567ffffffffffffffff81111562000b675762000b666200071f565b5b62000b7586828701620008b8565b9150509250925092565b62000b8a8162000744565b82525050565b600060208201905062000ba7600083018462000b7f565b92915050565b6000806040838503121562000bc75762000bc66200071a565b5b600062000bd78582860162000772565b925050602062000bea858286016200090f565b9150509250929050565b600062000c018262000744565b9050919050565b62000c138162000bf4565b811462000c1f57600080fd5b50565b60008135905062000c338162000c08565b92915050565b6000806000806080858703121562000c565762000c556200071a565b5b600062000c668782880162000772565b945050602085013567ffffffffffffffff81111562000c8a5762000c896200071f565b5b62000c9887828801620008b8565b935050604062000cab878288016200090f565b925050606062000cbe8782880162000c22565b91505092959194509250565b6000819050919050565b6000819050919050565b62000cf362000ced8262000cca565b62000cd4565b82525050565b6000819050919050565b62000d1862000d1282620008eb565b62000cf9565b82525050565b600062000d2c828562000cde565b60208201915062000d3e828462000d03565b6020820191508190509392505050565b600060408201905062000d656000830185620009fb565b62000d74602083018462000b7f565b9392505050565b600081905092915050565b600062000d938262000a57565b62000d9f818562000d7b565b935062000db181856020860162000a73565b80840191505092915050565b600062000dcb828562000d86565b915062000dd9828462000d03565b6020820191508190509392505050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b62000e3462000e2e8262000de9565b62000e15565b82525050565b60008160601b9050919050565b600062000e548262000e3a565b9050919050565b600062000e688262000e47565b9050919050565b62000e8462000e7e8262000744565b62000e5b565b82525050565b600062000e98828762000e1f565b60018201915062000eaa828662000e6f565b60148201915062000ebc828562000cde565b60208201915062000ece828462000cde565b60208201915081905095945050505050565b600060408201905062000ef7600083018562000b7f565b62000f06602083018462000a29565b9392505050565b600062000f1b828562000d86565b915062000f29828462000d86565b91508190509392505050565b600062000f4282620009ab565b9050919050565b600062000f568262000f35565b9050919050565b62000f7262000f6c8262000f49565b62000e5b565b82525050565b600062000f86828562000d03565b60208201915062000f98828462000f5d565b6014820191508190509392505050565b600060808201905062000fbf6000830187620009fb565b62000fce602083018662000b7f565b818103604083015262000fe2818562000a9f565b905062000ff3606083018462000a29565b95945050505050565b60006200100a828662000cde565b6020820191506200101c828562000d03565b6020820191506200102e828462000d03565b602082019150819050949350505050565b600082825260208201905092915050565b7f53696e676c65746f6e20636f6e7472616374206e6f74206465706c6f79656400600082015250565b600062001088601f836200103f565b9150620010958262001050565b602082019050919050565b60006020820190508181036000830152620010bb8162001079565b9050919050565b7f437265617465322063616c6c206661696c656400000000000000000000000000600082015250565b6000620010fa6013836200103f565b91506200110782620010c2565b602082019050919050565b600060208201905081810360008301526200112d81620010eb565b905091905056fe608060405234801561001057600080fd5b506040516102d13803806102d18339818101604052810190610032919061014a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610098906101fa565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061021a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610117826100ec565b9050919050565b6101278161010c565b811461013257600080fd5b50565b6000815190506101448161011e565b92915050565b6000602082840312156101605761015f6100e7565b5b600061016e84828501610135565b91505092915050565b600082825260208201905092915050565b7f496e76616c69642073696e676c65746f6e20616464726573732070726f76696460008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b60006101e4602283610177565b91506101ef82610188565b604082019050919050565b60006020820190508181036000830152610213816101d7565b9050919050565b60a9806102286000396000f3fe608060405273ffffffffffffffffffffffffffffffffffffffff600054167fa619486e0000000000000000000000000000000000000000000000000000000060003503604f578060005260206000f35b3660008037600080366000845af43d6000803e60008103606e573d6000fd5b3d6000f3fea2646970667358221220865eb106682720ab762bb6831c831f7e2564dbe3dffbd195c10577610c63c8cb64736f6c63430008180033a264697066735822122041b0b10d985087bae86d4b0a4712cfcccf162b935b3bc526b6b499a8cf01476264736f6c63430008180033";

type PokerGameProxyFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PokerGameProxyFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PokerGameProxyFactory__factory extends ContractFactory {
  constructor(...args: PokerGameProxyFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PokerGameProxyFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): PokerGameProxyFactory__factory {
    return super.connect(runner) as PokerGameProxyFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PokerGameProxyFactoryInterface {
    return new Interface(_abi) as PokerGameProxyFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PokerGameProxyFactory {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as PokerGameProxyFactory;
  }
}
